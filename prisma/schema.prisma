// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Employee {
  id             Int      @id @default(autoincrement())
  name           String
  lastName       String
  identification String
  birthDate      DateTime
  username       String   @unique
  password       String
  authId         String?  @unique

  superiorId Int?
  superior   Employee? @relation(fields: [superiorId], references: [id], name: "Superior")

  AssignedActivitiesBy  AssignedActivity[]      @relation(name: "AssignedActivitiesBy")
  AssignedActivitiesTo  AssignedActivity[]      @relation(name: "AssignedActivitiesTo")
  Activity              Activity[]
  Employee_RoleContract Employee_RoleContract[]
  Employees             Employee[]              @relation(name: "Superior")
}

model Role {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  isAdmin     Boolean

  companyId             Int
  company               Company                 @relation(fields: [companyId], references: [id])
  Employee_RoleContract Employee_RoleContract[]
}

model Company {
  id           Int      @id @default(autoincrement())
  name         String
  creationDate DateTime

  roles                 Role[]
  Contract              Contract[]
  Employee_RoleContract Employee_RoleContract[]
}

model Employee_RoleContract {
  id Int @id @default(autoincrement())

  employeeId Int
  employee   Employee @relation(fields: [employeeId], references: [id])

  companyId Int
  company   Company @relation(fields: [companyId], references: [id])

  contractId Int
  contract   Contract @relation(fields: [contractId], references: [id])

  roleId Int
  role   Role @relation(fields: [roleId], references: [id])

  date DateTime
}

model Contract {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  salary      Int
  dailyHours  Int

  companyId             Int
  company               Company                 @relation(fields: [companyId], references: [id])
  Employee_RoleContract Employee_RoleContract[]
}

model AssignedActivity {
  id             Int        @id @default(autoincrement())
  name           String
  description    String
  priority       Int
  estimatedHours Int
  difficulty     Int
  assignedDate   DateTime
  maxDate        DateTime
  completed      Boolean
  assignedById   Int
  assignedBy     Employee   @relation(fields: [assignedById], references: [id], name: "AssignedActivitiesBy")
  assignedToId   Int
  assignedTo     Employee   @relation(fields: [assignedToId], references: [id], name: "AssignedActivitiesTo")
  Activity       Activity[]
}

model Activity {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  difficulty  Int
  hours       Int
  date        DateTime
  maxDate     DateTime
  completed   Boolean

  assignedActivityId Int?
  assignedActivity   AssignedActivity? @relation(fields: [assignedActivityId], references: [id])
  employeeId         Int
  employee           Employee          @relation(fields: [employeeId], references: [id])
}
